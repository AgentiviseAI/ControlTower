name: ControlTower Complete CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  REGISTRY_LOGIN_SERVER: agentiviseregistry-c4cme7esd7cvddhc.azurecr.io
  IMAGE_NAME: control-tower
  CONTAINER_APP_NAME: controltower
  RESOURCE_GROUP: agentivise-rg

jobs:  
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build . --no-cache --tag ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
  deploy-to-azure:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # Required for OpenID Connect if you use it

    steps:
    - name: Log in to Azure for Deployment
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_DEPLOY_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Deploy to Azure Container Apps
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.REGISTRY_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest \
          --set-env-vars \
            ENVIRONMENT=prod \
            DEBUG=false \
            HOST=0.0.0.0 \
            PORT=8000 \
            RELOAD=false \
            DATABASE_TYPE="${{ secrets.DATABASE_TYPE }}" \
            DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            POSTGRES_HOST="${{ secrets.POSTGRES_HOST }}" \
            POSTGRES_PORT="${{ secrets.POSTGRES_PORT }}" \
            POSTGRES_USER="${{ secrets.POSTGRES_USER }}" \
            POSTGRES_PASSWORD="${{ secrets.POSTGRES_PASSWORD }}" \
            POSTGRES_DB="${{ secrets.POSTGRES_DB }}" \
            SECRET_KEY="${{ secrets.SECRET_KEY }}" \
            JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}" \
            JWT_ALGORITHM=HS256 \
            JWT_EXPIRATION_HOURS=24 \
            CORS_ORIGINS="${{ secrets.CORS_ORIGINS }}" \
            CORS_CREDENTIALS=true \
            CORS_METHODS="GET,POST,PUT,DELETE,OPTIONS" \
            CORS_HEADERS="*" \
            AUTH_SERVICE_URL="${{ secrets.AUTH_SERVICE_URL }}" \
            OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
            ANTHROPIC_API_KEY="${{ secrets.ANTHROPIC_API_KEY }}" \
            AZURE_OPENAI_ENDPOINT="${{ secrets.AZURE_OPENAI_ENDPOINT }}" \
            AZURE_OPENAI_API_KEY="${{ secrets.AZURE_OPENAI_API_KEY }}" \
            LOG_LEVEL=INFO \
            LOG_FORMAT=json \
            ENABLE_METRICS=true \
            METRICS_PORT=9090